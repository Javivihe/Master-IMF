ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = estándar')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
Airbnb <- read.csv("Airbnb_Milan.csv")
head(Airbnb)
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
library(dplyr)
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
head(df, 10)
df$host_is_superhost <- factor(df$host_is_superhost)
df$host_identity_verified <- factor(df$host_identity_verified)
str(df)
library(car)
df$host_is_superhost <- recode(df$host_is_superhost , " 0 = 'SI' ; 1 = 'NO'")
df$host_identity_verified <- recode(df$host_identity_verified , " 0 = 'VERIFICA' ; 1 = 'NO VERIFICA'")
install.packages("car")
library(car)
df$host_is_superhost <- recode(df$host_is_superhost , " 0 = 'SI' ; 1 = 'NO'")
df$host_identity_verified <- recode(df$host_identity_verified , " 0 = 'VERIFICA' ; 1 = 'NO VERIFICA'")
summary(df)
```{r}
df[df$minimum_nights <= 7, ]
filter(df, minimum_nights <=7)
df %>% group_by(host_identity_verified) %>%
summarise(room_price = mean(daily_price))
df %>% group_by(host_is_superhost) %>%
summarise(total_reviews = sum(number_of_reviews))
df %>% group_by(host_is_superhost) %>%
summarise(total_reviews = sum(number_of_reviews),
mean_revievs = mean(review_scores_rating))
df$CATEGORY <- recode(df$review_scores_rating , " 0:49 = 'NO ACONSEJABLE' ; 50:75  = 'ESTÁNDAR'; 76:100 = 'TOP' ")
df$CATEGORY <- factor(df$CATEGORY)
df$CATEGORY <- recode(df$review_scores_rating , " 0:49 = 'NO ACONSEJABLE' ; 50:75  = 'ESTÁNDAR'; 76:100 = 'TOP' ")
df$CATEGORY <- factor(df$CATEGORY)
summary(df)
plot(df$CATEGORY,
col= "red")
ggplot(df) +
geom_histogram(mapping = aes(daily_price), bins=10)
library(ggplot2)
ggplot(df) +
geom_histogram(mapping = aes(daily_price), bins=10)
13. Estudiar la relación entre los dormitorios y baños de forma gráfica.
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_red) +
geom_point(mapping = aes(bathrooms, bedrooms)) +
geom_smooth(mapping = aes(bathrooms, bedrooms), method = 'lm') +
ggtitle('Relación dormitorios y baños')
ggplot(df) +
geom_point(mapping = aes(bedrooms, bathrooms)) + geom_smooth(aes(bedrooms, bathrooms))
ggplot(df, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap(~host_identity_verified)
# install.packages("plotly")
library(plotly)
hist_no_ver = hist(df_no_verifica[,'number_of_reviews'])
```{r}
df_verifica = df_red[df_red['host_identity_verified'] == 'VERIFICA',]
df_no_verifica = df_red[df_red['host_identity_verified'] == 'NO VERIFICA',]
hist_ver = hist(df_verifica[,'number_of_reviews'])
hist_no_ver = hist(df_no_verifica[,'number_of_reviews'])
ggplot(df_red) +
geom_histogram(mapping=aes(number_of_reviews), stat='count') +
facet_wrap( ~ host_identity_verified)
df_top = df_red[df_red['CATEGORÍA'] == 'TOP',]
df_est = df_red[df_red['CATEGORÍA'] == 'ESTÁNDAR',]
df_no_ac = df_red[df_red['CATEGORÍA'] == 'NO ACONSEJABLE',]
library(ggplot2)
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
ggplot(df, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified))+
facet_wrap(~host_identity_verified)
, bins=10
ggplot(df, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap(~host_identity_verified)
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
df_red[host_identity_verified] <- factor(df_red[host_identity_verified])
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red[host_identity_verified] <- factor(df_red[host_identity_verified])
df_red[host_identity_verified] <- factor(df_red['host_identity_verified'])
df_red[host_identity_verified] <- factor(df_red[host_identity_verified])
df_red[host_identity_verified]
df_red['host_identity_verified']
df_red['host_identity_verified'] <- factor(df_red['host_identity_verified'])
df_red
df_red['host_identity_verified'] <- factor(df_red['host_identity_verified'])
df_red['host_identity_verified'] <- factor(df_red$host_identity_verified)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, 0='SI', 1='NO'))
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
detach("package:car", unload = TRUE)
detach("package:carData", unload = TRUE)
df_red
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO'))
df_red
df_red$host_is_superhost <- factor(df_red$host_is_superhost)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red['host_identity_verified'] <- factor(df_red$host_identity_verified)
df_red
summary(df_red)
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(number_of_reviews))
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(review_scores_rating))
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
df_top = df_red[df_red['CATEGORÍA'] == 'TOP',]
df_est = df_red[df_red['CATEGORÍA'] == 'ESTÁNDAR',]
df_red[df_red['review_scores_rating']<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red['review_scores_rating']) & (df_red['review_scores_rating']<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red['review_scores_rating']) & (df_red['review_scores_rating']<101),'CATEGORÍA'] = 'TOP'
df_red
df_red[df_red['review_scores_rating']<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red['review_scores_rating']) & (df_red['review_scores_rating']<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red['review_scores_rating']) & (df_red['review_scores_rating']<101),'CATEGORÍA'] = 'TOP'
df_red
df_top = df_red[df_red['CATEGORÍA'] == 'TOP',]
df_est = df_red[df_red['CATEGORÍA'] == 'ESTÁNDAR',]
df_no_ac = df_red[df_red['CATEGORÍA'] == 'NO ACONSEJABLE',]
```{r}
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=CATEGORÍA), bins=10)+
facet_wrap( ~ CATEGORÍA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' )+
facet_wrap( ~ CATEGORÍA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes( fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
security_deposit
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORíA)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~ CATEGORíA)
geom_histogram(aes(fill=host_is_superhost), bins=10, position ='dodge)+
facet_wrap(~CATEGORY)
ggplot(df, mapping = aes(security_deposit)) +
ggplot(df, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
ggplot(df, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
ggplot(df, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap(~host_identity_verified)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
ggplot(df, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap(~host_identity_verified)
ggplot(df, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
Airbnb <- read.csv("Airbnb_Milan.csv")
head(Airbnb)
library(dplyr)
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
head(df, 10)
df$host_is_superhost <- factor(df$host_is_superhost)
df$host_identity_verified <- factor(df$host_identity_verified)
str(df)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", bins=10)+
facet_wrap( ~ CATEGORÍA)
ion = 'dodge'
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)df_red
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
library(dplyr)
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
df_red
library(dplyr)
df <- transmute(Airbnb, host_is_superhost,
host_identity_verified,
bathrooms,
bedrooms,
daily_price,
security_deposit,
minimum_nights,
number_of_reviews,
review_scores_rating)
head(df_red)
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
head(df_red)
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
# Aquí usé la función mutate con el parámetro recode, no la propia función recode, pero el resultado no debería variar...
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO')) # Ojo, no tener instalado libreria Car
df_red$host_is_superhost <- factor(df_red$host_is_superhost)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red['host_identity_verified'] <- factor(df_red$host_identity_verified)
df_red
summary(df_red)
summary(df_red)
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red$host_identity_verified <- factor(df_red$host_identity_verified)
df_red
df_red[df_red$minimum_nights<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red[df_red['minimum_nights']<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red[df_red$minimum_nights<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red %>% group_by(host_identity_verified) %>% summarise(mean = mean(daily_price))
df_red %>% group_by(host_is_superhost) %>% summarise(Media_resenas = mean(number_of_reviews), N_resenas_tot = sum(number_of_reviews))
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(review_scores_rating))
df_red[df_red$review_scores_rating<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red$review_scores_rating) & (df_red$review_scores_rating<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red$review_scores_rating) & (df_red$review_scores_rating<101),'CATEGORÍA'] = 'TOP'
df_red
table(df_red['CATEGORÍA'])
hist(df_red[,'daily_price'])
hist(df_red[,'daily_price'], main = 'Histograma del precio por día')
hist(df_red[,'daily_price'], main = 'Histograma del precio por día', xlab = 'Precio por día')
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_red) +
geom_point(mapping = aes(bathrooms, bedrooms)) +
geom_smooth(mapping = aes(bathrooms, bedrooms), method = 'lm') +
ggtitle('Relación dormitorios y baños')
ggplot(df, mapping = aes(security_deposit)) +
geom_histogram(aes(fill=host_is_superhost), bins=10)+
facet_wrap(~CATEGORY)
df_top = df_red[df_red['CATEGORÍA'] == 'TOP',]
df_est = df_red[df_red['CATEGORÍA'] == 'ESTÁNDAR',]
df_no_ac = df_red[df_red['CATEGORÍA'] == 'NO ACONSEJABLE',]
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
df_top = df_red[df_red$CATEGORÍA == 'TOP',]
df_est = df_red[df_red$CATEGORÍA == 'ESTÁNDAR',]
df_no_ac = df_red[df_red$CATEGORÍA == 'NO ACONSEJABLE',]
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
# Aquí usé la función mutate con el parámetro recode, no la propia función recode, pero el resultado no debería variar...
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO')) # Ojo, no tener instalado libreria Car
df_red$host_is_superhost <- factor(df_red$host_is_superhost)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red$host_identity_verified <- factor(df_red$host_identity_verified)
df_red
summary(df_red)
df_red[df_red$minimum_nights<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red %>% group_by(host_identity_verified) %>% summarise(mean = mean(daily_price))
df_red %>% group_by(host_is_superhost) %>% summarise(Media_resenas = mean(number_of_reviews), N_resenas_tot = sum(number_of_reviews))
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(review_scores_rating))
df_red[df_red$review_scores_rating<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red$review_scores_rating) & (df_red$review_scores_rating<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red$review_scores_rating) & (df_red$review_scores_rating<101),'CATEGORÍA'] = 'TOP'
df_red
table(df_red['CATEGORÍA'])
hist(df_red[,'daily_price'], main = 'Histograma del precio por día', xlab = 'Precio por día')
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_red) +
geom_point(mapping = aes(bathrooms, bedrooms)) +
geom_smooth(mapping = aes(bathrooms, bedrooms), method = 'lm') +
ggtitle('Relación dormitorios y baños')
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
df_top = df_red[df_red$CATEGORÍA == 'TOP',]
df_est = df_red[df_red$CATEGORÍA == 'ESTÁNDAR',]
df_no_ac = df_red[df_red$CATEGORÍA == 'NO ACONSEJABLE',]
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
# Aquí usé la función mutate con el parámetro recode, no la propia función recode, pero el resultado no debería variar...
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO')) # Ojo, no tener instalado libreria Car
df_red$host_is_superhost <- factor(df_red$host_is_superhost)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red$host_identity_verified <- factor(df_red$host_identity_verified)
df_red
summary(df_red)
df_red[df_red$minimum_nights<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red %>% group_by(host_identity_verified) %>% summarise(mean = mean(daily_price))
df_red %>% group_by(host_is_superhost) %>% summarise(Media_resenas = mean(number_of_reviews), N_resenas_tot = sum(number_of_reviews))
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(review_scores_rating))
df_red[df_red$review_scores_rating<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red$review_scores_rating) & (df_red$review_scores_rating<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red$review_scores_rating) & (df_red$review_scores_rating<101),'CATEGORÍA'] = 'TOP'
df_red
table(df_red['CATEGORÍA'])
hist(df_red[,'daily_price'], main = 'Histograma del precio por día', xlab = 'Precio por día')
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_red) +
geom_point(mapping = aes(bathrooms, bedrooms)) +
geom_smooth(mapping = aes(bathrooms, bedrooms), method = 'lm') +
ggtitle('Relación dormitorios y baños')
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
df_top = df_red[df_red$CATEGORÍA == 'TOP',]
df_est = df_red[df_red$CATEGORÍA == 'ESTÁNDAR',]
df_no_ac = df_red[df_red$CATEGORÍA == 'NO ACONSEJABLE',]
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
df <- read.csv('Airbnb_Milan.csv', sep = ',')
df
df_red <- df[c('host_is_superhost', 'host_identity_verified', 'bathrooms', 'bedrooms', 'daily_price', 'security_deposit', 'minimum_nights', 'number_of_reviews', 'review_scores_rating')]
df_red
# Aquí usé la función mutate con el parámetro recode, no la propia función recode, pero el resultado no debería variar...
# install.packages("tidyr")
# install.packages("dplyr")
library(tidyr)
library(dplyr)
df_red <- df_red %>% mutate(host_is_superhost=recode(host_is_superhost, '0'='SI', '1'='NO')) # Ojo, no tener instalado libreria Car
df_red$host_is_superhost <- factor(df_red$host_is_superhost)
df_red
df_red <- df_red %>% mutate(host_identity_verified=recode(host_identity_verified, '0'='VERIFICA', '1'='NO VERIFICA'))
df_red$host_identity_verified <- factor(df_red$host_identity_verified)
df_red
summary(df_red)
df_red[df_red$minimum_nights<=7,] # No voy a usar más el dataframe filtrado para ejercicios próximos, usaré el sin filtrar
df_red %>% group_by(host_identity_verified) %>% summarise(mean = mean(daily_price))
df_red %>% group_by(host_is_superhost) %>% summarise(Media_resenas = mean(number_of_reviews), N_resenas_tot = sum(number_of_reviews))
df_red %>% group_by(host_is_superhost) %>% summarise(N_resenas = mean(review_scores_rating))
df_red[df_red$review_scores_rating<50,'CATEGORÍA'] = 'NO ACONSEJABLE'
df_red[(49<df_red$review_scores_rating) & (df_red$review_scores_rating<76),'CATEGORÍA'] = 'ESTÁNDAR'
df_red[(75<df_red$review_scores_rating) & (df_red$review_scores_rating<101),'CATEGORÍA'] = 'TOP'
df_red
table(df_red['CATEGORÍA'])
hist(df_red[,'daily_price'], main = 'Histograma del precio por día', xlab = 'Precio por día')
# install.packages("ggplot2")
library(ggplot2)
ggplot(df_red) +
geom_point(mapping = aes(bathrooms, bedrooms)) +
geom_smooth(mapping = aes(bathrooms, bedrooms), method = 'lm') +
ggtitle('Relación dormitorios y baños')
ggplot(df_red, mapping = aes(number_of_reviews)) +
geom_histogram(aes(fill=host_identity_verified), bins=10)+
facet_wrap( ~ host_identity_verified)
ggplot(df_red, mapping = aes(security_deposit)) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "black", position = 'dodge', bins=10)+
facet_wrap( ~ CATEGORÍA)
df_top = df_red[df_red$CATEGORÍA == 'TOP',]
df_est = df_red[df_red$CATEGORÍA == 'ESTÁNDAR',]
df_no_ac = df_red[df_red$CATEGORÍA == 'NO ACONSEJABLE',]
ggplot(df_top) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = TOP')
ggplot(df_est) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = Estándar')
ggplot(df_no_ac) +
geom_histogram(mapping = aes(security_deposit, fill = host_is_superhost), color = "red", position = 'dodge' ) +
ggtitle('Categoría = No aconsejable')
